#!/bin/bash

# Script de d√©monstration compl√®te de l'API CSV to DB
# Usage: ./demo.sh

echo "üöÄ D√©monstration compl√®te de l'API CSV to DB"
echo "=========================================="

# V√©rifier que le serveur tourne
echo ""
echo "1Ô∏è‚É£ V√©rification du serveur..."
if curl -s http://localhost:3000/api/v1/ > /dev/null; then
    echo "‚úÖ Serveur OK"
else
    echo "‚ùå Serveur non accessible - D√©marrez avec 'npm run dev'"
    exit 1
fi

# Test basique
echo ""
echo "2Ô∏è‚É£ Test de l'endpoint racine..."
curl -s http://localhost:3000/api/v1/ | jq .

# Upload du fichier CSV d'exemple
echo ""
echo "3Ô∏è‚É£ Upload du fichier CSV d'exemple..."
curl -s -X POST http://localhost:3000/api/v1/tables/upload \
  -F "file=@test_sample.csv" \
  -F "tableName=produits_demo" | jq .

# R√©cup√©ration des donn√©es
echo ""
echo "4Ô∏è‚É£ R√©cup√©ration des donn√©es..."
curl -s http://localhost:3000/api/v1/tables/produits_demo | jq .

# Export SQL
echo ""
echo "5Ô∏è‚É£ Export en SQL..."
curl -s http://localhost:3000/api/v1/tables/produits_demo/export | jq .

# T√©l√©chargement du fichier SQL (optionnel)
echo ""
echo "6Ô∏è‚É£ T√©l√©chargement du fichier SQL..."
curl -s -O -J http://localhost:3000/api/v1/tables/download/produits_demo.sql
if [ -f "produits_demo.sql" ]; then
    echo "‚úÖ Fichier SQL t√©l√©charg√©: produits_demo.sql"
    echo "üìÑ Aper√ßu du fichier g√©n√©r√© :"
    head -5 produits_demo.sql
    echo "..."
else
    echo "‚ùå Erreur t√©l√©chargement SQL"
fi

# Test des logs
echo ""
echo "7Ô∏è‚É£ Consultation des logs r√©cents..."
curl -s http://localhost:3000/api/v1/logs?hours=1 | jq '.data[-3:]'

echo ""
echo "üéâ D√©monstration termin√©e !"
echo ""
echo "üìã R√©sum√© :"
echo "‚úÖ Serveur accessible"
echo "‚úÖ Upload CSV fonctionnel"
echo "‚úÖ R√©cup√©ration donn√©es OK"
echo "‚úÖ Export SQL g√©n√©r√©"
echo "‚úÖ T√©l√©chargement fichier OK"
echo "‚úÖ Logs disponibles via API"
echo ""
echo "üîß Pour nettoyer :"
echo "rm -f produits_demo.sql"
echo "./manage-folders.sh clean"
